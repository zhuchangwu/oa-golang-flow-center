// Code generated by protoc-gen-go. DO NOT EDIT.
// source: flowCenter.proto

package flow_center

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 定义消息，消息为service中发送或者是接受的内容
type Flow struct {
	FlowType             string            `protobuf:"bytes,1,opt,name=flowType,proto3" json:"flowType,omitempty"`
	RoleMap              map[string]string `protobuf:"bytes,2,rep,name=roleMap,proto3" json:"roleMap,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Applicate            string            `protobuf:"bytes,3,opt,name=applicate,proto3" json:"applicate,omitempty"`
	DepartmentId         int32             `protobuf:"varint,4,opt,name=departmentId,proto3" json:"departmentId,omitempty"`
	RecordId             int32             `protobuf:"varint,5,opt,name=recordId,proto3" json:"recordId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Flow) Reset()         { *m = Flow{} }
func (m *Flow) String() string { return proto.CompactTextString(m) }
func (*Flow) ProtoMessage()    {}
func (*Flow) Descriptor() ([]byte, []int) {
	return fileDescriptor_84ee69aac8680289, []int{0}
}

func (m *Flow) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Flow.Unmarshal(m, b)
}
func (m *Flow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Flow.Marshal(b, m, deterministic)
}
func (m *Flow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Flow.Merge(m, src)
}
func (m *Flow) XXX_Size() int {
	return xxx_messageInfo_Flow.Size(m)
}
func (m *Flow) XXX_DiscardUnknown() {
	xxx_messageInfo_Flow.DiscardUnknown(m)
}

var xxx_messageInfo_Flow proto.InternalMessageInfo

func (m *Flow) GetFlowType() string {
	if m != nil {
		return m.FlowType
	}
	return ""
}

func (m *Flow) GetRoleMap() map[string]string {
	if m != nil {
		return m.RoleMap
	}
	return nil
}

func (m *Flow) GetApplicate() string {
	if m != nil {
		return m.Applicate
	}
	return ""
}

func (m *Flow) GetDepartmentId() int32 {
	if m != nil {
		return m.DepartmentId
	}
	return 0
}

func (m *Flow) GetRecordId() int32 {
	if m != nil {
		return m.RecordId
	}
	return 0
}

type Response struct {
	FlowId               int32    `protobuf:"varint,1,opt,name=flowId,proto3" json:"flowId,omitempty"`
	ResponseMsg          string   `protobuf:"bytes,2,opt,name=responseMsg,proto3" json:"responseMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_84ee69aac8680289, []int{1}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetFlowId() int32 {
	if m != nil {
		return m.FlowId
	}
	return 0
}

func (m *Response) GetResponseMsg() string {
	if m != nil {
		return m.ResponseMsg
	}
	return ""
}

func init() {
	proto.RegisterType((*Flow)(nil), "proto.Flow")
	proto.RegisterMapType((map[string]string)(nil), "proto.Flow.RoleMapEntry")
	proto.RegisterType((*Response)(nil), "proto.Response")
}

func init() { proto.RegisterFile("flowCenter.proto", fileDescriptor_84ee69aac8680289) }

var fileDescriptor_84ee69aac8680289 = []byte{
	// 287 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x51, 0xc1, 0x4e, 0x83, 0x40,
	0x10, 0x15, 0x28, 0xb5, 0x1d, 0x1a, 0x25, 0x1b, 0x63, 0x36, 0xc4, 0x03, 0xe1, 0xc4, 0x41, 0x31,
	0xc1, 0x8b, 0xa9, 0x37, 0xab, 0x26, 0x1c, 0x7a, 0x59, 0x3d, 0x79, 0x5b, 0x61, 0x34, 0x8d, 0xc8,
	0x6e, 0x96, 0xb5, 0x0d, 0x7f, 0xed, 0x27, 0x98, 0x5d, 0x68, 0xc5, 0x13, 0xbc, 0x37, 0x6f, 0xde,
	0x9b, 0x99, 0x85, 0xf0, 0xbd, 0x16, 0xbb, 0x15, 0x36, 0x1a, 0x55, 0x26, 0x95, 0xd0, 0x82, 0xf8,
	0xf6, 0x93, 0xfc, 0x38, 0x30, 0x79, 0xaa, 0xc5, 0x8e, 0x44, 0x30, 0x33, 0x9a, 0x97, 0x4e, 0x22,
	0x75, 0x62, 0x27, 0x9d, 0xb3, 0x03, 0x26, 0x39, 0x1c, 0x2b, 0x51, 0xe3, 0x9a, 0x4b, 0xea, 0xc6,
	0x5e, 0x1a, 0xe4, 0xb4, 0x37, 0xc9, 0x4c, 0x67, 0xc6, 0xfa, 0xd2, 0x63, 0xa3, 0x55, 0xc7, 0xf6,
	0x42, 0x72, 0x01, 0x73, 0x2e, 0x65, 0xbd, 0x29, 0xb9, 0x46, 0xea, 0x59, 0xc3, 0x3f, 0x82, 0x24,
	0xb0, 0xa8, 0x50, 0x72, 0xa5, 0xbf, 0xb0, 0xd1, 0x45, 0x45, 0x27, 0xb1, 0x93, 0xfa, 0xec, 0x1f,
	0x67, 0x26, 0x52, 0x58, 0x0a, 0x55, 0x15, 0x15, 0xf5, 0x6d, 0xfd, 0x80, 0xa3, 0x25, 0x2c, 0xc6,
	0xb1, 0x24, 0x04, 0xef, 0x13, 0xbb, 0x61, 0x70, 0xf3, 0x4b, 0xce, 0xc0, 0xdf, 0xf2, 0xfa, 0x1b,
	0xa9, 0x6b, 0xb9, 0x1e, 0x2c, 0xdd, 0x5b, 0x27, 0x79, 0x80, 0x19, 0xc3, 0x56, 0x8a, 0xa6, 0x45,
	0x72, 0x0e, 0x53, 0xb3, 0x65, 0x51, 0xd9, 0x56, 0x9f, 0x0d, 0x88, 0xc4, 0x10, 0xa8, 0x41, 0xb3,
	0x6e, 0x3f, 0x06, 0x8f, 0x31, 0x95, 0xdf, 0x41, 0x60, 0xb6, 0x7f, 0x46, 0xb5, 0xdd, 0x94, 0x48,
	0x2e, 0x01, 0x56, 0x0a, 0xb9, 0x46, 0x7b, 0xcc, 0x60, 0x74, 0x9f, 0xe8, 0x74, 0x00, 0xfb, 0xd0,
	0xe4, 0xe8, 0x3e, 0x7c, 0x3d, 0x11, 0xfc, 0xda, 0x64, 0x5d, 0x95, 0xf6, 0x51, 0xde, 0xa6, 0x56,
	0x73, 0xf3, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x46, 0x1b, 0xa7, 0xdb, 0xa9, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FlowServiceClient is the client API for FlowService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FlowServiceClient interface {
	CreateFlow(ctx context.Context, in *Flow, opts ...grpc.CallOption) (*Response, error)
}

type flowServiceClient struct {
	cc *grpc.ClientConn
}

func NewFlowServiceClient(cc *grpc.ClientConn) FlowServiceClient {
	return &flowServiceClient{cc}
}

func (c *flowServiceClient) CreateFlow(ctx context.Context, in *Flow, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/proto.FlowService/CreateFlow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FlowServiceServer is the server API for FlowService service.
type FlowServiceServer interface {
	CreateFlow(context.Context, *Flow) (*Response, error)
}

func RegisterFlowServiceServer(s *grpc.Server, srv FlowServiceServer) {
	s.RegisterService(&_FlowService_serviceDesc, srv)
}

func _FlowService_CreateFlow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Flow)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FlowServiceServer).CreateFlow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.FlowService/CreateFlow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FlowServiceServer).CreateFlow(ctx, req.(*Flow))
	}
	return interceptor(ctx, in, info, handler)
}

var _FlowService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.FlowService",
	HandlerType: (*FlowServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateFlow",
			Handler:    _FlowService_CreateFlow_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "flowCenter.proto",
}
